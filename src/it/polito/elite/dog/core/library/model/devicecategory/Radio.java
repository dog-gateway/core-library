/*
 * Dog - Core
 *
 * Copyright (c) 2011-2016 Dario Bonino and Luigi De Russis
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */
//
// Automatically generated by the DogOnt2Dog utility
//

package it.polito.elite.dog.core.library.model.devicecategory;


 
 /**
* RadioCategory - automatically generated by DogOnt2Dog
*/


import it.polito.elite.dog.core.library.model.DeviceStatus;
import javax.measure.Measure;

public interface Radio extends Entertainment
{
	public static int MATCH_TYPE=100;
	public static int MATCH_SUB_TYPE=50;
	public static int MATCH_MANUFACTURER=0;

	public void setVolume(Integer volume);
	public DeviceStatus getState();
	public void standBy();
	public void decreaseVolume();
	public void on();
	public void increaseVolume();
	public void up();
	public void set(Object value);
	public void down();
	public void setChannel(Integer channel);
	public void off();


	/*Generated Notifications*/

	/*Notification: ChannelControlNotification*/
	public void notifyChangedChannel(String channelId);
	/*Notification: StandByNotification*/
	public void notifyStandby();
	/*Notification: LevelControlNotification*/
	public void notifyChangedLevel(Measure<?,?>  newLevel);
	/*Notification: TuningStepUpNotification*/
	public void notifyChannelStepDown();
	/*Notification: OffNotification*/
	public void notifyOff();
	/*Notification: OnNotification*/
	public void notifyOn();
	/*Notification: TuningStepDownNotification*/
	public void notifyChannelStepUp();
	public void updateStatus();
}
